datasource db {
  provider  = "postgres"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String     @unique
  emailVerified DateTime?
  image         String?
  isAdmin       Boolean    @default(false)
  accounts      Account[]
  sessions      Session[]
  Response      Response[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@id([identifier, token])
}

model Competition {
  code          String   @id
  name          String
  description   String?
  frontpage_url String
  start_date    DateTime
  end_date      DateTime
  location      String
  location_url  String

  preview          DateTime
  apply_open       DateTime
  apply_close      DateTime
  decision_release DateTime
  confirm_by       DateTime

  forms Form[]
}

model Form {
  id               String      @id @default(cuid())
  title            String
  created_at       DateTime    @default(now())
  update_at        DateTime    @updatedAt
  competition      Competition @relation(fields: [competition_code], references: [code])
  competition_code String

  is_primary Boolean? // Need to have check constraint in the database so only one comp has primary true

  questions Json
  responses Response[]
}

model Response {
  id              String   @id @default(cuid())
  submitted_at    DateTime @default(now())
  submitted_by    User     @relation(fields: [submitted_by_id], references: [id])
  submitted_by_id String

  answers Json

  form    Form?   @relation(fields: [form_id], references: [id])
  form_id String?
}
